// For format details, see https://aka.ms/vscode-remote/devcontainer.json or the definition README at
// https://github.com/microsoft/vscode-dev-containers/tree/master/containers/docker-existing-dockerfile
{
  "name": "pwnboard2.0 dev",
  // Sets the run context to one level up instead of the .devcontainer folder.
  "context": "..",
  // Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
  "dockerFile": "../docker/dev.Dockerfile",
  // The optional 'runArgs' property can be used to specify additional runtime arguments.
  "runArgs": [
    // Uncomment the next line to use Docker from inside the container. See https://aka.ms/vscode-remote/samples/docker-in-docker for details.
    // "-v","/var/run/docker.sock:/var/run/docker.sock",
    // Uncomment the next line if you will be using a ptrace-based debugger like C++, Go, and Rust.
    "--security-opt",
    "seccomp=unconfined"
    // You may want to add a non-root user to your Dockerfile. On Linux, this will prevent
    // new files getting created as root. See https://aka.ms/vscode-remote/containers/non-root-user
    // for the needed Dockerfile updates and then uncomment the next line.
    // "-u", "vscode"
  ],
  "appPort": [
    "127.0.0.1:5000:5000",
    "127.0.0.1:3000:3000"
  ],

  // Use 'settings' to set *default* container specific settings.json values on container create.
  // You can edit these settings after create using File > Preferences > Settings > Remote.
  "settings": {
    // This will ignore your local shell user setting for Linux since shells like zsh are typically
    // not in base container images. You can also update this to an specific shell to ensure VS Code
    // uses the right one for terminals and tasks. For example, /bin/bash (or /bin/ash for Alpine).
    /*
     * VSCode
     */
    "terminal.integrated.shell.linux": null,
    "telemetry.enableTelemetry": false,
    "telemetry.enableCrashReporter": false,
    "editor.rulers": [100],
    "trailing-spaces.trimOnSave": true,
    /*
     * GIT
     */
    "git.autofetch": true,
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": true
    },
    "files.eol": "\n", // formatting only supports LF line endings
  },
  // Uncomment the next line to run commands after the container is created - for example installing git.
  // "postCreateCommand": "",
  "extensions": [
    "mikestead.dotenv",
    "ms-azuretools.vscode-docker",
    "ms-vscode.go",
    "shardulm94.trailing-spaces",
    "zxh404.vscode-proto3",
    "xaver.clang-format",
    "apollographql.vscode-apollo",
    "dbaeumer.vscode-eslint",
    "esbenp.prettier-vscode",
    "himanoa.Python-autopep8",
    "ms-python.python"
  ]
}