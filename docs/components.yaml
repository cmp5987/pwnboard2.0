components:
  #-------------------------------
  # Reusable schemas (data models)
  #-------------------------------
  schemas:
    Board:
      type: array
      items:
        $ref: "#/components/schemas/Host"
      example:
        - name: "Team 8 - wiki"
          primary_ip: "10.8.0.12"
          os: "Debian 11"
          service_group: "wiki"
          team_name: "Team 8"
          tags: ["linux", "wiki", "team 8", "inscope"]
          tools:
            - tool_name: Reptile
              last_seen: 1673322084
              first_seen: 1673321010
              total_beacons: 120
        - name: "Team 8 - DB"
          primary_ip: "10.8.0.13"
          os: "Debian 11"
          service_group: "db"
          team_name: "Team 8"
          tags: ["linux", "db", "team 8", "inscope"]
          tools:
            - tool_name: Reptile
              last_seen: 1673322084
              first_seen: 1673321010
              total_beacons: 120
            - tool_name: Nomnom
              last_seen: 1673322064
              first_seen: 1673321028
              total_beacons: 5
        - name: "Team 6 - wiki"
          primary_ip: "10.6.0.12"
          os: "Debian 11"
          service_group: "wiki"
          team_name: "Team 6"
          tags: ["linux", "wiki", "team 6", "inscope"]
          tools:
            - tool_name: Reptile
              last_seen: 1673322084
              first_seen: 1673321010
              total_beacons: 120
        - name: "Team 6 - DB"
          primary_ip: "10.6.0.13"
          os: "Debian 11"
          service_group: "db"
          team_name: "Team 6"
          tags: ["linux", "db", "team 6", "inscope"]
          tools:
            - tool_name: Reptile
              last_seen: 1673322084
              first_seen: 1673321010
              total_beacons: 120
            - tool_name: Nomnom
              last_seen: 1673322064
              first_seen: 1673321028
              total_beacons: 5

    BoardRow:
      type: object
      properties:
        service_group:
          type: string
        team_and_hosts:
          type: array
          items:
            type: object
            properties:
              team_name:
                type: string
              host:
                $ref: "#/components/schemas/Host"

    Host:
      type: object
      properties:
        name:
          type: string
        primary_ip:
          type: string
        os:
          type: string
        service_group:
          type: string
        team_name:
          type: string
        tags:
          type: array
          items:
            type: string
        tools:
          type: array
          items:
            $ref: "#/components/schemas/Tool"

    Tool:
      type: object
      properties:
        tool_name:
          type: string
        last_seen:
          type: number
        first_seen:
          type: number
        total_beacons:
          type: number

    ToolDescription:
      type: object
      properties:
        tool_name:
          type: string
        poc:
          type: string
        usage:
          type: string
      example:
        tool_name: Reptile
        poc: Hulto
        usage: See https://github.com/f0rb1dd3n/Reptile

    Callback:
      type: object
      properties:
        type:
          type: string
        ip:
          type: string
      example:
        type: Reptile
        ip: 10.6.0.13

    Response:
      type: object
      properties:
        status:
          type: string # ERROR || SUCCESS
        message:
          type: string
  #-------------------------------
  # Reusable operation parameters
  #-------------------------------
  parameters:
    offsetParam: # Can be referenced via '#/components/parameters/offsetParam'
      name: offset
      in: query
      description: Number of items to skip before returning the results.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 0
        default: 0
    limitParam: # Can be referenced as '#/components/parameters/limitParam'
      name: limit
      in: query
      description: Maximum number of items to return.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        default: 20
  #-------------------------------
  # Reusable responses
  #-------------------------------
  responses:
    404NotFound: # Can be referenced as '#/components/responses/404NotFound'
      description: The specified resource was not found.
    ImageResponse: # Can be referenced as '#/components/responses/ImageResponse'
      description: An image.
      content:
        image/*:
          schema:
            type: string
            format: binary
    GenericError: # Can be referenced as '#/components/responses/GenericError'
      description: An error occurred.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
